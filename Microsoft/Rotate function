int maxRotateFunction(vector<int>& nums) {
//simple brute force approach..

        if(nums.size()==1) return 0;
        int m=nums.size(),mx=0;
        for(int i=0;i<m;i++) mx+=(i*nums[i]);
        int n=m,k=0,p=m;

        m=m-1;
        while(m!=0){
            int j=(m+1)%n,sum=(k*nums[m]);
            k++;
            while(j!=m){
                sum+=(k*nums[j]);
                j=(j+1)%n;
                k++;
            }
            // cout<<sum<<endl;
            mx=max(mx,sum);
            m--;
            k=0;
        }
        return mx;
        
        //optimize solution
        
        
        int sum=0,original=0,n=nums.size();

        for(int i=0;i<nums.size();i++){
            sum+=nums[i];
            original+=(i*nums[i]);
        }
        //formula (earlier sum(original)-(last element(nums[i]*size of the array(n))))
        int mx=original;
        for(int i=nums.size()-1;i>=0;i--){
            original+=(sum-(nums[i]*n));
            mx=max(mx,original);
        }
        return mx;
    }
